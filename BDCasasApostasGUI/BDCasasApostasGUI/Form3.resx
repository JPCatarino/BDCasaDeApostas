<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cocCSHwr+BIAAAAASUVORK5CYII=
</value>
  </data>
</root>